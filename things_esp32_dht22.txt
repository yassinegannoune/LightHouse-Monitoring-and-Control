#include <DHTesp.h>         
#include <WiFi.h>           
#include <ThingsBoard.h>    

#define WIFI_AP_NAME        "Wokwi-GUEST"
#define WIFI_PASSWORD       ""


#define TOKEN               "t97ASOtSVVYsN5OAuxxA"
#define THINGSBOARD_SERVER  "thingsboard.cloud"

#define SERIAL_DEBUG_BAUD    115200

WiFiClient espClient;
ThingsBoard tb(espClient);
int status = WL_IDLE_STATUS;


// DHT object
DHTesp dht;
// ESP32 pin used to query DHT22
#define DHT_PIN 15

// Main application loop delay
int quant = 20;

// Period of sending a temperature/humidity data.
int send_delay = 4000;

// Time passed after temperature/humidity data was sent, milliseconds.
int send_passed = 0;

// Setup an application
void setup() {
  // Initialize serial for debugging
  Serial.begin(SERIAL_DEBUG_BAUD);
  WiFi.begin(WIFI_AP_NAME, WIFI_PASSWORD);
  InitWiFi();

  // Initialize temperature sensor
  dht.setup(DHT_PIN, DHTesp::DHT22);
}

// Main application loop
void loop() {
  delay(quant);
  send_passed += quant;

  // Reconnect to WiFi, if needed
  if (WiFi.status() != WL_CONNECTED) {
    reconnect();
    return;
  }

  // Reconnect to ThingsBoard, if needed
  if (!tb.connected()) {

    // Connect to the ThingsBoard
    Serial.print("Connecting to: ");
    Serial.print(THINGSBOARD_SERVER);
    Serial.print(" with token ");
    Serial.println(TOKEN);
    if (!tb.connect(THINGSBOARD_SERVER, TOKEN)) {
      Serial.println("Failed to connect");
      return;
    }
  }

  // Check if it is a time to send DHT22 temperature and humidity
  if (send_passed > send_delay) {
    Serial.println("Sending data...");

      tb.sendTelemetryFloat("temperature", dht.getTemperature());
    //  tb.sendTelemetryFloat("humidity", dht.getHumidity());

//  }

    send_passed = 0;
  }

  // Process messages
  tb.loop();
}

void InitWiFi()
{
  Serial.println("Connecting to AP ...");
  // attempt to connect to WiFi network

  WiFi.begin(WIFI_AP_NAME, WIFI_PASSWORD);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("Connected to AP");
}

void reconnect() {
  // Loop until we're reconnected
  status = WiFi.status();
  if ( status != WL_CONNECTED) {
    WiFi.begin(WIFI_AP_NAME, WIFI_PASSWORD);
    while (WiFi.status() != WL_CONNECTED) {
      delay(500);
      Serial.print(".");
    }
    Serial.println("Connected to AP");
  }
}
